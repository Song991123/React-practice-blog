{"version":3,"file":"static/js/778.ae5a1b45.chunk.js","mappings":"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","sources":["components/loading.js","hooks/useAxios.js","img/select_arrow.svg","practice/practice4.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nfunction Loading({lodingColor=\"black\"}) {\r\n  let color = lodingColor;\r\n  return (\r\n    <div className=\"spinner-border\" role=\"status\" style={{color:`${color}`}}>\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoading.propTypes = {\r\n  lodingColor: PropTypes.string\r\n};\r\n\r\nexport default Loading;","import defaultAxios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useAxios = (opts, axiosInstance = defaultAxios) => {\r\n  const [state, setState] = useState({\r\n    loading: true,\r\n    error: null,\r\n    data: null,\r\n  });\r\n  const [trigger, setTrigger] = useState(0);\r\n\r\n  const refetch = () => {\r\n    setState({\r\n        ...state,\r\n        loading: true\r\n    });\r\n    setTrigger(Date.now());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!opts.url) {\r\n      return;\r\n    }\r\n\r\n    axiosInstance(opts)\r\n      .then((data) => {\r\n        setState({\r\n          ...state, // 기존 상태의 모든 속성을 유지\r\n          loading: false, // loading 상태를 false로 변경\r\n          data, // data: data를 단축 속성명으로 작성\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setState({ ...state, loading: false, error });\r\n      });\r\n  }, [trigger]);\r\n  return { ...state, refetch };\r\n};\r\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSelectArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ffffff\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"m2 5 6 6 6-6\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSelectArrow);\nexport default __webpack_public_path__ + \"static/media/select_arrow.49f3b5a5f694e1ca0df8ca3cedd3aa2d.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from \"react\";\r\nimport Loading from \"../components/loading\";\r\nimport selectArrow from \"./../img/select_arrow.svg\";\r\nimport { useAxios } from \"../hooks/useAxios\";\r\n\r\nfunction Practice4() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [InputValue, SetInputValue] = useState(1);\r\n  const [chooseindex, setChooseIndex] = useState(0);\r\n\r\n  const { data, loading, error } = useAxios({\r\n    url: \"https://api.coinpaprika.com/v1/tickers\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(data && !loading){\r\n      setCoins(data.data);\r\n    }\r\n  })\r\n  \r\n  const onChange = (e) => {\r\n    SetInputValue(e.target.value);\r\n  };\r\n  const onSelect = (e) => {\r\n    setChooseIndex(parseInt(e.target.value));\r\n  };\r\n\r\n  const USDToCoin = () => {\r\n    if (InputValue === \"\" || coins.length === 0) {\r\n      return null;\r\n    }\r\n    let CanBuyCoin = InputValue / coins[chooseindex].quotes.USD.price;\r\n    return CanBuyCoin.toFixed(8);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-div\">\r\n      <h1>The coins!</h1>\r\n      <p>Total {coins.length.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n      <hr/>\r\n      {loading ? <Loading/> : null}\r\n      <h3>USD</h3>\r\n      <form>\r\n        <div\r\n          className=\"input-group mb-3\"\r\n          style={{ width: \"500px\", margin: \"auto\" }}\r\n        >\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Write your Money...\"\r\n            aria-label=\"Write your Money...\"\r\n            aria-describedby=\"button-addon2\"\r\n            onChange={onChange}\r\n            value={InputValue}\r\n          />\r\n        </div>\r\n      </form>\r\n      {chooseindex >= 0 && !loading ? (\r\n        <div>\r\n          <select \r\n            className=\"form-select\"\r\n            aria-label=\"Disabled select example\"\r\n            value={chooseindex}\r\n            onChange={onSelect}\r\n            style={{backgroundImage: `url(${selectArrow})`}}\r\n          >\r\n            {coins.map(function (coin, index) {\r\n              return (\r\n                <option value={`${index}`} key={index}>\r\n                  {coin.name} ({coin.symbol})\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <form>\r\n            <div\r\n              className=\"input-group mb-3\"\r\n              style={{ width: \"500px\", margin: \"auto\" }}\r\n            >\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Write your Money...\"\r\n                aria-label=\"Write your Money...\"\r\n                aria-describedby=\"button-addon2\"\r\n                value={USDToCoin()}\r\n                disabled\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Practice4;\r\n"],"names":["_ref","lodingColor","color","_jsx","className","role","style","concat","children","useAxios","opts","axiosInstance","arguments","length","undefined","defaultAxios","state","setState","useState","loading","error","data","trigger","setTrigger","useEffect","url","then","catch","refetch","Date","now","coins","setCoins","InputValue","SetInputValue","chooseindex","setChooseIndex","_jsxs","toString","replace","Loading","width","margin","type","placeholder","onChange","e","target","value","parseInt","backgroundImage","selectArrow","map","coin","index","name","symbol","USDToCoin","quotes","USD","price","toFixed","disabled"],"sourceRoot":""}