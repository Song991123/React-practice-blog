{"version":3,"file":"static/js/661.625ee441.chunk.js","mappings":"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","sources":["components/loading.js","hooks/useAxios.js","img/octicon-play-24.svg","img/arrow-back.svg","routes/MovieDetail.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nfunction Loading({lodingColor=\"black\"}) {\r\n  let color = lodingColor;\r\n  return (\r\n    <div className=\"spinner-border\" role=\"status\" style={{color:`${color}`}}>\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoading.propTypes = {\r\n  lodingColor: PropTypes.string\r\n};\r\n\r\nexport default Loading;","import defaultAxios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useAxios = (opts, axiosInstance = defaultAxios) => {\r\n  const [state, setState] = useState({\r\n    loading: true,\r\n    error: null,\r\n    data: null,\r\n  });\r\n  const [trigger, setTrigger] = useState(0);\r\n\r\n  const refetch = () => {\r\n    setState({\r\n        ...state,\r\n        loading: true\r\n    });\r\n    setTrigger(Date.now());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!opts.url) {\r\n      return;\r\n    }\r\n\r\n    axiosInstance(opts)\r\n      .then((data) => {\r\n        setState({\r\n          ...state, // 기존 상태의 모든 속성을 유지\r\n          loading: false, // loading 상태를 false로 변경\r\n          data, // data: data를 단축 속성명으로 작성\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setState({ ...state, loading: false, error });\r\n      });\r\n  }, [trigger]);\r\n  return { ...state, refetch };\r\n};\r\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgOcticonPlay24(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"white\",\n    d: \"M9.5 15.584V8.416a.5.5 0 0 1 .77-.42l5.576 3.583a.5.5 0 0 1 0 .842l-5.576 3.584a.5.5 0 0 1-.77-.42Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"white\",\n    d: \"M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12m11-9.5A9.5 9.5 0 0 0 2.5 12a9.5 9.5 0 0 0 9.5 9.5a9.5 9.5 0 0 0 9.5-9.5A9.5 9.5 0 0 0 12 2.5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgOcticonPlay24);\nexport default __webpack_public_path__ + \"static/media/octicon-play-24.0b8e63e83e5c4055031b87246c340695.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowBack(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"white\",\n    d: \"M17.77 3.77L16 2L6 12l10 10l1.77-1.77L9.54 12z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowBack);\nexport default __webpack_public_path__ + \"static/media/arrow-back.10fd89d409e4688c4672a3674de2c249.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../components/loading\";\r\nimport playImg from \"./../img/octicon-play-24.svg\";\r\nimport backArrow from \"./../img/arrow-back.svg\";\r\nimport { useAxios } from \"../hooks/useAxios\";\r\n\r\nlet Detail = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0px 227px;\r\n`;\r\n\r\nlet PlayMovie = styled.div`\r\n  position: relative;\r\n\r\n  .octicon-play-24 {\r\n    width: 132px;\r\n    height: 132px;\r\n    position: absolute;\r\n    left: calc(50% - 66px);\r\n    top: calc(50% - 65.5px);\r\n    opacity: 0.4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nlet MovieInfo = styled.div`\r\n  color: white;\r\n  .movie-description {\r\n    width: 896px;\r\n  }\r\n  .movie-Info {\r\n    margin: 40px 0px;\r\n    min-width: 896px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap:30px;\r\n  }\r\n  .fill {\r\n    color: yellow;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n  .movie-Info_detail{\r\n    max-width: 681px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .movieRate-info_rate {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 5px;\r\n  }\r\n  .movieRate-info_rate_star {\r\n    position: relative;\r\n  }\r\n  .clip {\r\n    clip-path: polygon(0% 0%, var(--clip) 0%, var(--clip) 100%, 0% 100%);\r\n  }\r\n`;\r\nlet BackArrow = styled.img`\r\n  width: 50px;\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 80px;\r\n`;\r\nlet GenreBadge = styled.span`\r\n  background-color: #da680b;\r\n  border-radius: 10px;\r\n  font-size: 0.8em;\r\n  margin-right: 1em;\r\n  padding: 0.5em 1em;\r\n  color: white;\r\n`;\r\n\r\nfunction MovieDetail() {\r\n  let navigate = useNavigate();\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  function ConvertRuntime(runtime) {\r\n    if (runtime) {\r\n      const hours = Math.floor(runtime / 60);\r\n      const minute = runtime % 60;\r\n      if (minute) {\r\n        return hours ? `• ${hours}시간 ${minute} 분` : `• ${minute} 분`;\r\n      }\r\n      return `• ${hours}시간`;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function starFill() {\r\n    let fill = Math.floor(movieData.rating / 2);\r\n    let halfStarPercentage = (movieData.rating / 2 - fill).toFixed(1) * 100;\r\n    let creatStar = [];\r\n    for (let i = 0; i < fill; i++) {\r\n      creatStar.push(<span>★</span>);\r\n    }\r\n    creatStar.push(\r\n      <span className=\"clip\" style={{ \"--clip\": `${halfStarPercentage}%` }}>\r\n        ★\r\n      </span>\r\n    );\r\n    return creatStar;\r\n  }\r\n  const { data, loading, error, refetch } = useAxios({\r\n    url: `https://yts.mx/api/v2/movie_details.json?movie_id=${id}`\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data && !loading) {\r\n      setMovieData(data.data.data.movie);\r\n    }\r\n  }, [data, loading]);\r\n\r\n\r\n  return (\r\n    <div className=\"content-div\">\r\n      <BackArrow\r\n        src={backArrow}\r\n        onClick={() => {\r\n          navigate(-1);\r\n        }}\r\n        style={{ cursor: \"pointer\", zIndex: \"998\" }}\r\n      ></BackArrow>\r\n      {loading ? (\r\n        <Loading lodingColor=\"white\" />\r\n      ) : (\r\n        <Detail>\r\n          <div className=\"Detail-info\">\r\n            <PlayMovie>\r\n              <img\r\n                className=\"theater-img\"\r\n                src={movieData.background_image_original}\r\n                onLoad={() => setImageLoaded(true)}\r\n              />\r\n              {\r\n                imageLoaded && (\r\n                  <img\r\n                  className=\"octicon-play-24\"\r\n                  src={playImg}\r\n                  onClick={() => {\r\n                    window.open(movieData.url);\r\n                  }}\r\n                />\r\n                )\r\n              }\r\n\r\n            </PlayMovie>\r\n            {\r\n                imageLoaded && (\r\n            <MovieInfo>\r\n              <div className=\"movie-Info\">\r\n                <img\r\n                  className=\"poster-img\"\r\n                  src={movieData.medium_cover_image}\r\n                  style={{width: \"20%\"}}\r\n                />\r\n                <div className=\"movie-Info_detail\">\r\n                  <h1>{movieData.title}</h1>\r\n                  <div>\r\n                    {movieData.year}년 {ConvertRuntime(movieData.runtime)}\r\n                  </div>\r\n                  <div className=\"movieRate-info\">\r\n                    <div className=\"movieRate-info_rate\">\r\n                      <div className=\"movieRate-info_rate_star\">\r\n                        <div className=\"stars\">\r\n                          <span>★</span>\r\n                          <span>★</span>\r\n                          <span>★</span>\r\n                          <span>★</span>\r\n                          <span>★</span>\r\n                        </div>\r\n                        <div className=\"stars fill\">{starFill()}</div>\r\n                      </div>\r\n                      <p>{movieData.rating}</p>\r\n                      <div>\r\n                        <span style={{ color: \"red\" }}>♥</span>{\" \"}\r\n                        {movieData.like_count}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div key={id}>\r\n                    {movieData.genres && movieData.genres.map((genre) => {\r\n                      return <GenreBadge>{genre}</GenreBadge>;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"movie-description\">\r\n                {movieData.description_full}\r\n              </div>\r\n            </MovieInfo>\r\n                )}\r\n          </div>\r\n        </Detail>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetail;\r\n"],"names":["_ref","lodingColor","color","_jsx","className","role","style","concat","children","useAxios","opts","axiosInstance","arguments","length","undefined","defaultAxios","state","setState","useState","loading","error","data","trigger","setTrigger","useEffect","url","then","catch","refetch","Date","now","Detail","styled","div","_templateObject","_taggedTemplateLiteral","PlayMovie","_templateObject2","MovieInfo","_templateObject3","BackArrow","img","_templateObject4","GenreBadge","span","_templateObject5","navigate","useNavigate","movieData","setMovieData","imageLoaded","setImageLoaded","id","useParams","movie","_jsxs","src","backArrow","onClick","cursor","zIndex","Loading","background_image_original","onLoad","playImg","window","open","medium_cover_image","width","title","year","runtime","hours","Math","floor","minute","ConvertRuntime","fill","rating","halfStarPercentage","toFixed","creatStar","i","push","starFill","like_count","genres","map","genre","description_full"],"sourceRoot":""}