{"version":3,"file":"static/js/603.c0e0da30.chunk.js","mappings":"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","sources":["hooks/useInput.js","hooks/useFadeIn.js","practice/practice6.js","hooks/useTitle.js","hooks/useBeforeLeave.js","hooks/useTabs.js","hooks/useClick.js","hooks/useConfirm.js","hooks/usePreventLeave.js","hooks/useNetwork.js","hooks/useScroll.js","hooks/useFullscreen.js","hooks/useNotification.js","styled/Btn.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n/** \r\n * @name useInput\r\n * @description Input에 value를 받을 때마다 update를 하고, 유효성 검사를 할 수 있도록 만든 hook*/\r\nexport const useInput = (initialValue, validator) =>{\r\n    const [value, setValue] = useState(initialValue);\r\n    const onChange = event => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        let willUpdate = true;\r\n            \r\n        if(typeof validator === \"function\"){\r\n            willUpdate = validator(value);\r\n        }\r\n        if(willUpdate){\r\n            setValue(value);\r\n        }\r\n    };\r\n\r\n    return {value, onChange};\r\n}","import { useEffect, useRef } from \"react\";\r\n\r\n/**\r\n * @name useFadeIn\r\n * @description 페이드인 시키는 hook. \r\n * @param {number} duration opacity 값\r\n * @param {number} delay delay시킬 값\r\n */\r\nexport const useFadeIn = (duration = 1, delay = 0) => {\r\n    const element = useRef();\r\n    useEffect(() => {\r\n      if (typeof duration !== \"number\" || typeof delay !== \"number\") {\r\n        return;\r\n      }\r\n      const { current } = element;\r\n      if (element.current) {\r\n        // 리플로우를 강제로 발생시키면서 값을 사용하지 않음을 명확하게 밝힘\r\n        void current.offsetWidth;\r\n        current.style.transition = `opacity ${duration}s ease-in-out ${delay}s`;\r\n        current.style.opacity = 1;\r\n      }\r\n    },[]);\r\n    return { ref: element, style: { opacity: 0 } };\r\n  };","/* custom hook 연습용 페이지 */\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useInput } from \"../hooks/useInput\";\r\nimport { useTabs } from \"../hooks/useTabs\";\r\nimport { useTitle } from \"../hooks/useTitle\";\r\nimport { useClick } from \"../hooks/useClick\";\r\nimport { useConfirm } from \"../hooks/useConfirm\";\r\nimport { usePreventLeave } from \"../hooks/usePreventLeave\";\r\nimport { useBeforeLeave } from \"../hooks/useBeforeLeave\";\r\nimport { useFadeIn } from \"../hooks/useFadeIn\";\r\nimport { useNetwork } from \"../hooks/useNetwork\";\r\nimport { useScroll } from \"../hooks/useScroll\";\r\nimport { useNotification } from \"../hooks/useNotification\";\r\nimport { useFullscreen } from \"../hooks/useFullscreen\";\r\nimport { BlackBtn } from \"../styled/Btn\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BtnBox = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 5px;\r\n`;\r\n\r\nconst content = [\r\n  {\r\n    tab: \"Section 1\",\r\n    content: \"I'm the content of the Section 1\",\r\n  },\r\n  {\r\n    tab: \"Section 2\",\r\n    content: \"I'm the content of the Section 2\",\r\n  },\r\n];\r\n\r\n\r\nfunction Practice6() {\r\n  const sayHello = () => console.log(\"Hello\");\r\n  const deleteWorld = () => console.log(\"Deleting the World\");\r\n  const abort = () => console.log(\"Aborted\");\r\n  const begForLife = () => console.log(\"Plz don't leave\");\r\n  const titleUpdater = useTitle(\"Loading…\");\r\n  const maxLen = (value) => value.length <= 10;\r\n  const handleNetworkChange = (online) => {\r\n    console.log(online ? \"We just went online\" : \"We are Offline\");\r\n  };\r\n  const onFullScreen = (isFull) => {\r\n    console.log(isFull ? \"We are full\" : \"We are Small\");\r\n  }\r\n\r\n  const reference = useRef();\r\n\r\n  useEffect(() => {\r\n    const focusTimer = setTimeout(() => reference.current.focus(), 500);\r\n    const titleTimer = setTimeout(() => titleUpdater(\"Practice6\"), 500);\r\n    return () => {\r\n      clearTimeout(focusTimer);\r\n      clearTimeout(titleTimer);\r\n    };\r\n  }, []);\r\n\r\n  useBeforeLeave(begForLife);\r\n\r\n  const name = useInput(\"Mr. \", maxLen);\r\n  const { currentItem, changeItem } = useTabs(0, content);\r\n  const title = useClick(sayHello);\r\n  const confirmDelete = useConfirm(\"Are you sure?\", deleteWorld, abort);\r\n  const { enablePrevent, disablePrevent } = usePreventLeave();\r\n  const fadeInHello = useFadeIn(1, 0);\r\n  const fadeInName = useFadeIn(1, 1);\r\n\r\n  const online = useNetwork(handleNetworkChange);\r\n  const { y } = useScroll();\r\n  const { element, triggerFull, exitFull,isFullscreen } = useFullscreen(onFullScreen);\r\n  const triggerNotif = useNotification(\"테스트 알람창\", {body: \"테스트를 확인했습니다.\"});\r\n\r\n\r\n  return (\r\n    <div className=\"content-div\" style={{ height: \"150vh\" }}>\r\n      <h1>커스텀 훅 연습용 페이지</h1>\r\n      <hr />\r\n      <div>\r\n        <h3>UseInput</h3>\r\n        <input placeholder=\"Name\" {...name} />\r\n      </div>\r\n      <div>\r\n        <h3>UseTabs</h3>\r\n        <BtnBox>\r\n            {content.map((section, index) => (\r\n              <BlackBtn key={index} onClick={() => changeItem(index)}>{section.tab}</BlackBtn>\r\n            ))}\r\n        </BtnBox>\r\n        <div>{currentItem.content}</div>\r\n      </div>\r\n      <div>\r\n        <h3>UseRef(Not custom hook)</h3>\r\n        <div>Hi</div>\r\n        <input ref={reference} placeholder=\"0.5초 내로 여기에 focus\" />\r\n      </div>\r\n      <div>\r\n        <h3>UseClick</h3>\r\n        <p ref={title} style={{ cursor: \"pointer\" }}>\r\n          Click Here(출력 정보는 콘솔창 확인)\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h3>useConfirm</h3>\r\n        <BlackBtn onClick={confirmDelete}>Delete the world</BlackBtn>\r\n        <p>(확인, 취소에 따른 결과는 콘솔창 확인)</p>\r\n      </div>\r\n      <div>\r\n        <h3>usePreventLeave</h3>\r\n        <BtnBox>\r\n            <BlackBtn onClick={enablePrevent}>Protect</BlackBtn>\r\n            <BlackBtn onClick={disablePrevent}>Unprotect</BlackBtn>\r\n        </BtnBox>\r\n\r\n        <p>\r\n          Protect를 누르고 창을 벗어나려 하면 알림창이 뜨고, Unprotect를 누르면\r\n          그냥 벗어날 수 있다.\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h3>useFadeIn</h3>\r\n        <p {...fadeInHello}>Hello</p>\r\n        <p {...fadeInName}>I'm maren</p>\r\n      </div>\r\n      <div>\r\n        <h3>useNetwork</h3>\r\n        <p>{online ? \"Online\" : \"Offline\"}</p>\r\n      </div>\r\n      <div>\r\n        <h3\r\n          style={{\r\n            left: \"20px\",\r\n            top: \"200px\",\r\n            position: \"fixed\",\r\n            color: y > 100 ? \"red\" : \"blue\",\r\n          }}\r\n        >\r\n          useScroll\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <h3>useFullscreen</h3>\r\n        <div ref={element}>\r\n          <img\r\n            src=\"https://i.ibb.co/R6RwNxx/grape.jpg\"\r\n            alt=\"grape\"\r\n            width=\"250\"\r\n          />\r\n          <br/>\r\n          {isFullscreen ? <BlackBtn onClick={exitFull}>Exit fullscreen</BlackBtn>: null}\r\n        </div>\r\n        <BlackBtn onClick={triggerFull}>Make fullscreen</BlackBtn>\r\n      </div>\r\n      <div>\r\n        <h3>useNotification</h3>\r\n        <BlackBtn onClick={triggerNotif}>알람창 띄우기</BlackBtn>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Practice6;\r\n","import { useEffect, useState } from \"react\";\r\n\r\n/** \r\n * @name useTitle\r\n * @description 사이트 접속 시 웹사이트 명을 바꿔주는 hook*/\r\nexport const useTitle = (initialTitle) => {\r\n    const [title, setTItle] = useState(initialTitle);\r\n    const updateTitle = () =>{\r\n        const htmlTitle = document.querySelector(\"title\");\r\n        htmlTitle.innerText = title;\r\n    }\r\n    useEffect(updateTitle, [title]);\r\n    return setTItle;\r\n}","import { useEffect } from \"react\";\r\n/**\r\n * @name useBeforeLeave\r\n * @description 마우스가 페이지 밖을 벗어났을 때 작동시키는 hook\r\n */\r\nexport const useBeforeLeave = (onBefore) => {\r\n\r\n    const handle = (event) => {\r\n        const { clientY } = event;\r\n        if(clientY <= 0){\r\n            onBefore();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(typeof onBefore !== \"function\"){\r\n            return;\r\n        }\r\n        document.addEventListener(\"mouseleave\", handle);\r\n        return () => {\r\n            document.removeEventListener(\"mouseleave\", handle);\r\n        }\r\n    }, [])\r\n}","import { useState } from \"react\";\r\n\r\n/** \r\n * @name useTabs\r\n * @description array를 넣고, 요청에 의해 특정 index에 해당되는 data를 반환시켜주는 hook*/\r\nexport const useTabs = (initialValue, allTabs) => {\r\n    const [currentIndex, setCurrentIndex] = useState(initialValue);\r\n    // 들어온 데이터가 null이거나 array가 아닐 경우 그냥 반환\r\n    if(!allTabs || !Array.isArray(allTabs)){\r\n        return;\r\n    }\r\n    // 값이 들어온 경우 리턴시킬 값들\r\n    return {\r\n        currentItem : allTabs[currentIndex],\r\n        changeItem : setCurrentIndex\r\n    };\r\n};","import { useEffect, useRef } from \"react\";\r\n/** \r\n * @name useClick\r\n * @description useRef를 이용해 재렌더링하지 않고 클릭에 반응하는 hook*/\r\nexport const useClick = (onClick) => {\r\n    const element = useRef();\r\n    useEffect(() => {\r\n        // 들어온게 function 타입이 아니면 return\r\n        if (typeof onClick !== \"function\"){\r\n            return;\r\n        }\r\n        // mount될 때\r\n        if(element.current){\r\n            element.current.addEventListener(\"click\", onClick);\r\n        }\r\n        // unmount 될 때\r\n        return () => {\r\n            if(element.current){\r\n                element.current.removeEventListener(\"click\", onClick);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return element;\r\n}","/**\r\n * @name useConfirm\r\n * @description 사용자에게 알림창을 띄우는 용도. 실제로 hooks는 아님. useEffect와 useState를 사용하지 않기 때문.\r\n*/\r\nexport const useConfirm = (message = \"\", onConfirm, onCancle) =>{\r\n    // 유효성 검사 ---------------------\r\n    if(!onConfirm && typeof onConfirm !== \"function\"){\r\n        return;\r\n    }\r\n    if(!onCancle && typeof onCancle !== \"function\"){\r\n        return;\r\n    }\r\n    // 주요 로직 ----------------------\r\n    const confirmAction = () => {\r\n        if(window.confirm(message)){\r\n            onConfirm();\r\n        }\r\n        else{\r\n            onCancle();\r\n        }\r\n    }\r\n    return confirmAction;\r\n}","/**\r\n * @name usePreventLeave\r\n * @description 어떤 문서 작업이나 작업 시, save가 안된 상태에서 브라우저를 닫으려 할 때 유저에게 정말 닫을거냐고 물어보는 hook. 실제로 hooks는 아님. useEffect와 useState를 사용하지 않기 때문.\r\n */\r\nexport const usePreventLeave = (onLeaving) => {\r\n    const listner = (event) => {\r\n        event.preventDefault();\r\n        event.returnValue = \"\";\r\n    }\r\n    const enablePrevent = () => window.addEventListener(\"beforeunload\", listner);\r\n    const disablePrevent = () => window.removeEventListener(\"beforeunload\", listner);\r\n\r\n    return {enablePrevent, disablePrevent}\r\n}","import { useEffect, useState } from \"react\";\r\n/**\r\n * @name useNetwork\r\n * @description 네트워크 상태를 확인하고 온라인인지 오프라인인지 확인하는 훅\r\n */\r\nexport const useNetwork = onchange => {\r\n    const [status, setStatus] = useState(navigator.onLine);\r\n    const handleChange = () => {\r\n        if(typeof onchange === \"function\"){\r\n            onchange(navigator.onLine);\r\n        }\r\n        setStatus(navigator.onLine);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"online\", handleChange);\r\n        window.addEventListener(\"offline\", handleChange);\r\n        return () => {\r\n            window.removeEventListener(\"online\", handleChange);\r\n            window.removeEventListener(\"offline\", handleChange);\r\n        }\r\n    }, [])\r\n    return status;\r\n}","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * @name useScroll\r\n * @description 스크롤 위치에 따른 반응형 디자인을 적용하기 위한 용도.\r\n */\r\nexport const useScroll = () => {\r\n  const [state, setState] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const onScroll = (event) => {\r\n    setState({ y: window.scrollY, x: window.scrollX });\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n  return state;\r\n};\r\n","import { useRef, useState } from \"react\";\r\n\r\n\r\nexport const useFullscreen = (callback) => {\r\n    const element = useRef();\r\n    const [isFullscreen, setIsFullscreen] = useState(false);\r\n  \r\n    const triggerFull = () => {\r\n      if (element.current) {\r\n        element.current.requestFullscreen();\r\n        if (callback && typeof callback === \"function\") {\r\n          callback(true);\r\n        }\r\n        setIsFullscreen(true);\r\n      }\r\n    };\r\n    const exitFull = () => {\r\n      document.exitFullscreen();\r\n      if (callback && typeof callback === \"function\") {\r\n        callback(false);\r\n      }\r\n      setIsFullscreen(false);\r\n    };\r\n    return { element, triggerFull, exitFull, isFullscreen };\r\n  };","/**\r\n * @name useNotification\r\n * @param {string} title 알람 제목 \r\n * @param {string} options 알람 설명\r\n * @description 알람창을 띄워주는 hook\r\n * @returns 알람창을 띄워준다.\r\n */\r\nexport const useNotification = (title, options) => {\r\n    // 윈도우에서 웹이 작동하는 게 아니면 알림을 멈춤\r\n    if((!\"Nofication\" in window)){\r\n        return;\r\n    }\r\n    const fireNotif = () => {\r\n        if(Notification.permission !== \"granted\"){\r\n            Notification.requestPermission().then((permission) => {\r\n                if(permission === \"granted\"){\r\n                    new Notification(title, options);\r\n                } else {\r\n                    return;\r\n                }\r\n                \r\n            });\r\n        }\r\n        else{\r\n            new Notification(title, options);\r\n        }\r\n    };\r\n    return fireNotif;\r\n}","import styled from \"styled-components\";\r\n\r\nlet BlackBtn = styled.button`\r\n  background-color: black;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  border: none;\r\n`;\r\n\r\nexport {BlackBtn};"],"names":["useFadeIn","duration","arguments","length","undefined","delay","element","useRef","useEffect","current","offsetWidth","style","transition","concat","opacity","ref","BtnBox","styled","div","_templateObject","_taggedTemplateLiteral","content","tab","titleUpdater","initialTitle","title","setTItle","useState","updateTitle","document","querySelector","innerText","useTitle","reference","focusTimer","setTimeout","focus","titleTimer","clearTimeout","onBefore","handle","event","clientY","addEventListener","removeEventListener","useBeforeLeave","begForLife","console","log","name","useInput","initialValue","validator","value","setValue","onChange","target","willUpdate","currentItem","changeItem","useTabs","allTabs","currentIndex","setCurrentIndex","Array","isArray","onClick","useClick","sayHello","confirmDelete","message","onConfirm","onCancle","confirmAction","window","confirm","useConfirm","deleteWorld","abort","enablePrevent","disablePrevent","onLeaving","listner","preventDefault","returnValue","usePreventLeave","fadeInHello","fadeInName","online","onchange","status","setStatus","navigator","onLine","handleChange","useNetwork","y","useScroll","state","setState","x","onScroll","scrollY","scrollX","triggerFull","exitFull","isFullscreen","callback","setIsFullscreen","requestFullscreen","exitFullscreen","useFullscreen","isFull","triggerNotif","useNotification","options","fireNotif","Notification","permission","requestPermission","then","body","_jsxs","className","height","children","_jsx","placeholder","map","section","index","BlackBtn","cursor","left","top","position","color","src","alt","width","button"],"sourceRoot":""}